name: DockerBuilder
on:
  release:
    types: [published]
  schedule:
    - cron: "0 4 1 * *"

jobs:
  publish_to_docker_hub:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    steps:
    - name: get latest tag while released
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> ${GITHUB_ENV}
    - name: get latest tag while scheduled
      if: startsWith(github.ref, 'refs/tags/') == false
      run: |
        echo "VERSION=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | grep -oEm 1 '"tag_name": "v[0-9]{1,}.[0-9]{1,}(.[0-9]{1,})?"' | cut -d':' -f2 | sed 's/ //g;s/"//g')" >> ${GITHUB_ENV}

    - name: Check out code
      uses: actions/checkout@v3
      with:
        ref: ${{ env.VERSION }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Docker Login
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push to Docker Hub
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
        cache-from: type=gha
        cache-to: type=gha,mode=max
        tags: |
          yin199909/healthreport:${{ env.VERSION }}
          yin199909/healthreport:latest-v1
          ghcr.io/${{ github.repository_owner }}/healthreport:${{ env.VERSION }}
          ghcr.io/${{ github.repository_owner }}/healthreport:latest-v1
